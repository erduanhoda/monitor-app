// <auto-generated />
using System;
using AltenChallengeApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AltenChallengeApp.Infrastructure.Migrations
{
    [DbContext(typeof(AltenChallengeAppDbContext))]
    [Migration("20181115231918_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AltenChallengeApp.Core.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdateddAt");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new { Id = new Guid("4dcd05e1-69c4-49ca-8863-9359858d8ff5"), Address = "Cementvägen 8", City = "Södertälje", Country = "Sweden", CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 295, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), IsDeleted = false, Name = "Kalles Grustransporter AB", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 295, DateTimeKind.Local), ZipCode = "111 11" },
                        new { Id = new Guid("6d23151a-6904-4154-af0e-f97ae201c89b"), Address = "Balkvägen 12", City = "Stockholm", Country = "Sweden", CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 295, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), IsDeleted = false, Name = "Johans Bulk AB", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 295, DateTimeKind.Local), ZipCode = "222 22" },
                        new { Id = new Guid("7df039b0-eb98-4415-813a-f930ce3a20c7"), Address = "Budgetvägen 1", City = "Uppsala", Country = "Sweden", CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 295, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), IsDeleted = false, Name = "Haralds Värdetransporter AB", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 295, DateTimeKind.Local), ZipCode = "333 33" }
                    );
                });

            modelBuilder.Entity("AltenChallengeApp.Core.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("CreatedBy");

                    b.Property<Guid>("CustomerId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("RegistrationNumber");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdateddAt");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new { Id = new Guid("cc9d160d-9cb4-43bf-80f5-ef945e619408"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 292, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("4dcd05e1-69c4-49ca-8863-9359858d8ff5"), IsDeleted = false, RegistrationNumber = "ABC123", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) },
                        new { Id = new Guid("5c131134-6d49-48f5-ad8d-a2dccf738ce7"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("4dcd05e1-69c4-49ca-8863-9359858d8ff5"), IsDeleted = false, RegistrationNumber = "DEF456", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) },
                        new { Id = new Guid("9fa0be73-befe-4584-9aac-81c04605f905"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("4dcd05e1-69c4-49ca-8863-9359858d8ff5"), IsDeleted = false, RegistrationNumber = "GHI789", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) },
                        new { Id = new Guid("ed6a27e9-7f20-4bf4-896e-4ce540307a73"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("6d23151a-6904-4154-af0e-f97ae201c89b"), IsDeleted = false, RegistrationNumber = "JKL012", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) },
                        new { Id = new Guid("d40f33e3-19f6-4c55-ba5f-28d7a575879f"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("6d23151a-6904-4154-af0e-f97ae201c89b"), IsDeleted = false, RegistrationNumber = "MNO345      ", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) },
                        new { Id = new Guid("b38f284c-d6f3-4732-adc1-94dd56b04e62"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("7df039b0-eb98-4415-813a-f930ce3a20c7"), IsDeleted = false, RegistrationNumber = "PQR678", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) },
                        new { Id = new Guid("e3131a06-3a3f-4fc8-98b4-ee762ca4af83"), CreatedAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local), CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"), CustomerId = new Guid("7df039b0-eb98-4415-813a-f930ce3a20c7"), IsDeleted = false, RegistrationNumber = "STU901", UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"), UpdateddAt = new DateTime(2018, 11, 16, 0, 19, 18, 293, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("AltenChallengeApp.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("AltenChallengeApp.Core.Entities.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
